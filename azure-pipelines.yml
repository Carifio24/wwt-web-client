# Azure Pipelines: build the Webclient

trigger:
  # Note that this pipeline will still run on pull requests. However,
  # operations that require service connections -- namely the AzureFileCopy --
  # will be skipped on PR builds, so randos can't just update our website by
  # submitting a PR.
  branches:
    include:
      - master
      - "refs/tags/v*"

pool:
  # We need to run on Windows to take advantage of the AzureFileCopy@3 task.
  vmImage: 'windows-latest'

steps:
- powershell: |
    $branch = "$(Build.SourceBranch)"
    if($branch.StartsWith("refs/tags/v")) {
      $version = $branch.Substring(11)
      Write-Host "##vso[task.setvariable variable=pub_prefix;]webclient"
      Write-Host "##vso[task.setvariable variable=profile;]prod"
    } else {
      # Won't actually get published on PRs, etc.
      Write-Host "##vso[task.setvariable variable=pub_prefix;]testing_webclient"
      Write-Host "##vso[task.setvariable variable=profile;]testing"
    }
  displayName: Set deployment parameters

- task: Npm@1
  displayName: NPM install
  inputs:
    command: 'install'

- task: Grunt@0
  displayName: Build distribution directory with Grunt
  inputs:
    gruntFile: 'Gruntfile.js'
    targets: 'dist-$(profile)'

- task: CopyFiles@2
  displayName: Copy dist directory to artifact staging
  inputs:
    sourceFolder: '$(build.sourcesDirectory)/dist'
    targetFolder: '$(build.artifactStagingDirectory)'

- task: PublishPipelineArtifact@1
  displayName: Publish web deployment artifacts
  inputs:
    targetPath: '$(build.artifactStagingDirectory)'
    publishLocation: 'pipeline'
    artifactName: wwt-webclient-deployment

- task: AzureFileCopy@3
  displayName: Publish artifacts to Azure Blob storage
  inputs:
    SourcePath: '$(build.artifactStagingDirectory)'
    azureSubscription: 'aas@wwtadmindotnetfoundation'
    Destination: 'AzureBlob'
    storage: 'wwtwebstatic'
    ContainerName: '$web'
    blobPrefix: '$(pub_prefix)'

# For annoying reasons, we have to include a default.aspx file that does a
# JavaScript redirection. In order for that to work, we have to tell the web
# server to serve up the file with a non-default "text/html" Content-Type.
# This task does the setting. Note that the service principal associated with
# the azureSubscription account needs to be set up with the "Storage Blob Data
# Contribtor" role on the storage account in order for this to work.

- task: AzurePowerShell@4
  displayName: Update Azure Blob storage content types
  inputs:
    azureSubscription: 'aas@wwtadmindotnetfoundation'
    azurePowerShellVersion: 'LatestVersion'
    scriptType: 'inlineScript'
    inline: |
      $ctxt = New-AzStorageContext -UseConnectedAccount -StorageAccountName "wwtwebstatic"
      $blob = Get-AzStorageBlob -Context $ctxt -Container '$web' -Blob "$(pub_prefix)/default.aspx"
      $blob.ICloudBlob.Properties.ContentType = "text/html"
      $blob.ICloudBlob.SetProperties()
